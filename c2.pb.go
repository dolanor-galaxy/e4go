// Code generated by protoc-gen-go. DO NOT EDIT.
// source: c2.proto

package e4common

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type C2Request_Command int32

const (
	C2Request_NEW_CLIENT             C2Request_Command = 0
	C2Request_REMOVE_CLIENT          C2Request_Command = 1
	C2Request_NEW_TOPIC_CLIENT       C2Request_Command = 2
	C2Request_REMOVE_TOPIC_CLIENT    C2Request_Command = 3
	C2Request_RESET_CLIENT           C2Request_Command = 4
	C2Request_NEW_TOPIC              C2Request_Command = 5
	C2Request_REMOVE_TOPIC           C2Request_Command = 6
	C2Request_NEW_CLIENT_KEY         C2Request_Command = 7
	C2Request_SEND_MESSAGE           C2Request_Command = 8
	C2Request_GET_CLIENTS            C2Request_Command = 9
	C2Request_GET_TOPICS             C2Request_Command = 10
	C2Request_GET_CLIENT_TOPIC_COUNT C2Request_Command = 11
	C2Request_GET_CLIENT_TOPICS      C2Request_Command = 12
	C2Request_GET_TOPIC_CLIENT_COUNT C2Request_Command = 13
	C2Request_GET_TOPIC_CLIENTS      C2Request_Command = 14
)

var C2Request_Command_name = map[int32]string{
	0:  "NEW_CLIENT",
	1:  "REMOVE_CLIENT",
	2:  "NEW_TOPIC_CLIENT",
	3:  "REMOVE_TOPIC_CLIENT",
	4:  "RESET_CLIENT",
	5:  "NEW_TOPIC",
	6:  "REMOVE_TOPIC",
	7:  "NEW_CLIENT_KEY",
	8:  "SEND_MESSAGE",
	9:  "GET_CLIENTS",
	10: "GET_TOPICS",
	11: "GET_CLIENT_TOPIC_COUNT",
	12: "GET_CLIENT_TOPICS",
	13: "GET_TOPIC_CLIENT_COUNT",
	14: "GET_TOPIC_CLIENTS",
}

var C2Request_Command_value = map[string]int32{
	"NEW_CLIENT":             0,
	"REMOVE_CLIENT":          1,
	"NEW_TOPIC_CLIENT":       2,
	"REMOVE_TOPIC_CLIENT":    3,
	"RESET_CLIENT":           4,
	"NEW_TOPIC":              5,
	"REMOVE_TOPIC":           6,
	"NEW_CLIENT_KEY":         7,
	"SEND_MESSAGE":           8,
	"GET_CLIENTS":            9,
	"GET_TOPICS":             10,
	"GET_CLIENT_TOPIC_COUNT": 11,
	"GET_CLIENT_TOPICS":      12,
	"GET_TOPIC_CLIENT_COUNT": 13,
	"GET_TOPIC_CLIENTS":      14,
}

func (x C2Request_Command) String() string {
	return proto.EnumName(C2Request_Command_name, int32(x))
}

func (C2Request_Command) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2d16d4246620660a, []int{0, 0}
}

type C2Request struct {
	Command              C2Request_Command `protobuf:"varint,1,opt,name=command,proto3,enum=e4common.C2Request_Command" json:"command,omitempty"`
	Id                   []byte            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Key                  []byte            `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Topic                string            `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	Msg                  string            `protobuf:"bytes,6,opt,name=msg,proto3" json:"msg,omitempty"`
	Offset               uint64            `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Count                uint64            `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *C2Request) Reset()         { *m = C2Request{} }
func (m *C2Request) String() string { return proto.CompactTextString(m) }
func (*C2Request) ProtoMessage()    {}
func (*C2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d16d4246620660a, []int{0}
}

func (m *C2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2Request.Unmarshal(m, b)
}
func (m *C2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2Request.Marshal(b, m, deterministic)
}
func (m *C2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2Request.Merge(m, src)
}
func (m *C2Request) XXX_Size() int {
	return xxx_messageInfo_C2Request.Size(m)
}
func (m *C2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_C2Request.DiscardUnknown(m)
}

var xxx_messageInfo_C2Request proto.InternalMessageInfo

func (m *C2Request) GetCommand() C2Request_Command {
	if m != nil {
		return m.Command
	}
	return C2Request_NEW_CLIENT
}

func (m *C2Request) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *C2Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *C2Request) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *C2Request) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *C2Request) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *C2Request) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *C2Request) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type C2Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	Names                []string `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
	Ids                  []string `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	Topics               []string `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	Count                uint64   `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *C2Response) Reset()         { *m = C2Response{} }
func (m *C2Response) String() string { return proto.CompactTextString(m) }
func (*C2Response) ProtoMessage()    {}
func (*C2Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d16d4246620660a, []int{1}
}

func (m *C2Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_C2Response.Unmarshal(m, b)
}
func (m *C2Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_C2Response.Marshal(b, m, deterministic)
}
func (m *C2Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_C2Response.Merge(m, src)
}
func (m *C2Response) XXX_Size() int {
	return xxx_messageInfo_C2Response.Size(m)
}
func (m *C2Response) XXX_DiscardUnknown() {
	xxx_messageInfo_C2Response.DiscardUnknown(m)
}

var xxx_messageInfo_C2Response proto.InternalMessageInfo

func (m *C2Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *C2Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *C2Response) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *C2Response) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *C2Response) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *C2Response) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterEnum("e4common.C2Request_Command", C2Request_Command_name, C2Request_Command_value)
	proto.RegisterType((*C2Request)(nil), "e4common.C2Request")
	proto.RegisterType((*C2Response)(nil), "e4common.C2Response")
}

func init() { proto.RegisterFile("c2.proto", fileDescriptor_2d16d4246620660a) }

var fileDescriptor_2d16d4246620660a = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0x86, 0xbb, 0x1f, 0xd9, 0x8f, 0x69, 0x12, 0xdc, 0x69, 0x28, 0x56, 0xb9, 0xac, 0x72, 0xca,
	0x29, 0x87, 0x05, 0x24, 0x4e, 0x48, 0x68, 0xb1, 0xaa, 0x0a, 0x9a, 0x20, 0x6f, 0x00, 0x71, 0x8a,
	0xca, 0xc6, 0x45, 0x11, 0xca, 0x3a, 0xc4, 0x9b, 0x03, 0xff, 0x01, 0xf1, 0x87, 0xf8, 0x73, 0x68,
	0xbc, 0x71, 0x3e, 0x50, 0x6f, 0xf3, 0xbe, 0x7e, 0x66, 0x34, 0xd6, 0x3b, 0x90, 0x54, 0xf9, 0x78,
	0xbd, 0xd1, 0x8d, 0xc6, 0x44, 0xbd, 0xac, 0xf4, 0x6a, 0xa5, 0xeb, 0xe1, 0xef, 0x10, 0xd2, 0x22,
	0x97, 0xea, 0xe7, 0x56, 0x99, 0x06, 0x5f, 0x41, 0x4c, 0xfe, 0x7d, 0xbd, 0xe0, 0x5e, 0xe6, 0x8d,
	0xfa, 0xf9, 0xf3, 0xb1, 0x23, 0xc7, 0x7b, 0x6a, 0x5c, 0xb4, 0x88, 0x74, 0x2c, 0xf6, 0xc1, 0x5f,
	0x2e, 0xb8, 0x9f, 0x79, 0xa3, 0xae, 0xf4, 0x97, 0x0b, 0x44, 0x08, 0xeb, 0xfb, 0x95, 0xe2, 0x41,
	0xe6, 0x8d, 0x52, 0x69, 0x6b, 0x64, 0x10, 0xfc, 0x50, 0xbf, 0x78, 0x68, 0x21, 0x2a, 0x71, 0x00,
	0x9d, 0x46, 0xaf, 0x97, 0x15, 0xef, 0x58, 0xac, 0x15, 0xc4, 0xad, 0xcc, 0x77, 0x1e, 0x59, 0x8f,
	0x4a, 0xbc, 0x82, 0x48, 0x3f, 0x3c, 0x18, 0xd5, 0xf0, 0x38, 0xf3, 0x46, 0xa1, 0xdc, 0x29, 0xea,
	0xaf, 0xf4, 0xb6, 0x6e, 0x78, 0x62, 0xed, 0x56, 0x0c, 0xff, 0xfa, 0x10, 0x17, 0xfb, 0xbd, 0x60,
	0x22, 0xbe, 0xcc, 0x8b, 0x0f, 0xb7, 0x62, 0x32, 0x63, 0x67, 0x78, 0x01, 0x3d, 0x29, 0xee, 0xa6,
	0x9f, 0x85, 0xb3, 0x3c, 0x1c, 0x00, 0x23, 0x64, 0x36, 0xfd, 0x78, 0x5b, 0x38, 0xd7, 0xc7, 0x67,
	0x70, 0xb9, 0x03, 0x4f, 0x1e, 0x02, 0x64, 0xd0, 0x95, 0xa2, 0x14, 0x33, 0xe7, 0x84, 0xd8, 0x83,
	0x74, 0x3f, 0x80, 0x75, 0x5a, 0xe0, 0xd0, 0xc9, 0x22, 0x44, 0xe8, 0x1f, 0x96, 0x98, 0xbf, 0x17,
	0x5f, 0x59, 0x4c, 0x54, 0x29, 0x26, 0xef, 0xe6, 0x77, 0xa2, 0x2c, 0xdf, 0xde, 0x08, 0x96, 0xe0,
	0x13, 0x38, 0xbf, 0xd9, 0x8f, 0x2d, 0x59, 0x4a, 0xbb, 0x93, 0x61, 0xa7, 0x94, 0x0c, 0xf0, 0x1a,
	0xae, 0x0e, 0x80, 0x5b, 0x6b, 0xfa, 0x69, 0x32, 0x63, 0xe7, 0xf8, 0x14, 0x2e, 0xfe, 0x7f, 0x2b,
	0x59, 0xd7, 0xb5, 0x1c, 0x7f, 0x61, 0xd7, 0xd2, 0x73, 0x2d, 0xc7, 0x6f, 0x25, 0xeb, 0x0f, 0xff,
	0x78, 0x00, 0x14, 0xb4, 0x59, 0xeb, 0xda, 0x28, 0xe4, 0x10, 0x9b, 0x6d, 0x55, 0x29, 0x63, 0xec,
	0x3d, 0x24, 0xd2, 0x49, 0x8a, 0x49, 0x6d, 0x36, 0x36, 0xf3, 0x54, 0x52, 0x49, 0x71, 0x50, 0xd0,
	0x86, 0x07, 0x59, 0x40, 0x71, 0x5a, 0x41, 0xdc, 0x72, 0x61, 0x78, 0x68, 0x3d, 0x2a, 0x29, 0x4e,
	0x9b, 0xb4, 0xe1, 0x1d, 0x6b, 0xee, 0xd4, 0x21, 0xce, 0xe8, 0x28, 0xce, 0xfc, 0x0d, 0xf8, 0x45,
	0x8e, 0xaf, 0xe9, 0x48, 0x5d, 0xaa, 0x97, 0x8f, 0xdc, 0xe4, 0xf5, 0xe0, 0xd4, 0x6c, 0xf7, 0x1f,
	0x9e, 0x7d, 0x8b, 0xec, 0xc1, 0xbf, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x04, 0xed, 0x1b,
	0xfc, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// C2Client is the client API for C2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type C2Client interface {
	C2Command(ctx context.Context, in *C2Request, opts ...grpc.CallOption) (*C2Response, error)
}

type c2Client struct {
	cc *grpc.ClientConn
}

func NewC2Client(cc *grpc.ClientConn) C2Client {
	return &c2Client{cc}
}

func (c *c2Client) C2Command(ctx context.Context, in *C2Request, opts ...grpc.CallOption) (*C2Response, error) {
	out := new(C2Response)
	err := c.cc.Invoke(ctx, "/e4common.C2/C2Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// C2Server is the server API for C2 service.
type C2Server interface {
	C2Command(context.Context, *C2Request) (*C2Response, error)
}

func RegisterC2Server(s *grpc.Server, srv C2Server) {
	s.RegisterService(&_C2_serviceDesc, srv)
}

func _C2_C2Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(C2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(C2Server).C2Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/e4common.C2/C2Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(C2Server).C2Command(ctx, req.(*C2Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _C2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "e4common.C2",
	HandlerType: (*C2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "C2Command",
			Handler:    _C2_C2Command_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "c2.proto",
}
